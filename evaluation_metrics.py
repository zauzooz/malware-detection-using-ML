import pandas as pd
import numpy as np
import json
import datetime
import matplotlib
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

def confusion_matrix(X, y):
    pass

def visulize_confusion_matrix(X, y):
    """
        nhận output từ confusion_matrix
    """
    pass

def binary_classifation_metrics(X_train, y_train, X_test, y_test, model):

    y_train_pred = model.predict(X_train)
    y_test_pred = model.predict(X_test)


    metrics = {
        "accuracy":{
            "train": accuracy_score(y_true=y_train, y_pred=y_train_pred),
            "test": accuracy_score(y_true=y_train, y_pred=y_test_pred)
        },
        "precision":{
            "train": precision_score(y_true=y_train, y_pred=y_train_pred),
            "test": precision_score(y_true=y_train, y_pred=y_test_pred)
        },
        "recall":{
            "train": recall_score(y_true=y_train, y_pred=y_train_pred),
            "test": recall_score(y_true=y_train, y_pred=y_test_pred)
        },
        "f1-score":{
            "train": recall_score(y_true=y_train, y_pred=y_train_pred),
            "test" : recall_score(y_true=y_train, y_pred=y_test_pred)
        }
    }

    now = datetime.datetime.now()
    file_path = f"log/evaluation_metrics/metrics_{now.day}-{now.month}-{now.year}_{now.hour}-{now.minute}-{now.second}-{now.microsecond}.json"
    json.dump(
        metrics,
        open(file_path, "w"),
        indent=6
    )

    return metrics

def visulize_metric(metrics, file_path):
    """
        nhận output từ binary_classifation_metrics
    """
    pass